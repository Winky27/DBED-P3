This question is worth 1.5 marks

Question:
Suppose that you are given source code for a DBMS that does not support indexing. This code was extensively tested, so we have a high degree of confidence that it works correctly. Now you were asked to extend the code, such that the indexing is supported. How would you test your extended code to make sure it works properly with indexing? Note that you don't need to provide any additional code for this question, just the answer.

*** It is important to justify / explain your answer ***

Answer:
The indexes I would test on first would be to create a few tables and test different kinds of indexes (like single column, multi column, unique, and non unique indexes).
Next, I would insert, update, and delete data to ensure that indexes are created, updated, and removed correctly, and that any changes are reflected in the indexed columns. 
As a way to test performance and accuracy, I would run SELECT statements with WHERE statements based on the indexed columns and compare results and execution times with and without indexes to ensure that queries are executed more quickly and the results are correct.
Also, I would test edge cases (like finding missing values or nulls or out of range data)to make sure the indexes do not affect the query logic.
Then, to ensure consistency and integrity, I would commitand rollbacks on an indexed column, and ensure that the data and the index structures are consistent even after a failure or rollback.
I would also drop, recreate and rebuild indexes to ensure that the metadata and storage are correct as per the existing schema and load lots of data (like bulk and batch operations) to test the response of the indexing engine to the load.
Beyond that, I would make parallel changes on two threads to seek race conditions or locking issues.
Lastly, I would compare the data retrieval and modification outcomes with the data that was present before the indexing and ensure that the addition of indexes does not negatively affect the performance without introducing new errors or functionality.
